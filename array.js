// arr.push(...items)
// arr.pop()
// arr.shift()
// arr.unshift(...items)

// // 1  Дан массив ['a', 'b', 'c']. Добавьте ему в конец элементы 1, 2, 3.
// let
// 2 Даны два массива: [1, 2, 3] и [4, 5, 6]. Объедините их вместе.
// let a = [1, 2, 3]
// b = [4, 5, 6]
// console.log(a.concat(b));

// 3 Дан массив [1, 2, 3]. Добавьте ему в конец элементы 4, 5, 6.
// let task2 = [1, 2, 3]
// task2.push(4, 5, 6)
// console.log(task2);

// 4 Дан массив [1, 2, 3]. Добавьте ему в начало элементы 4, 5, 6.
// let task4 = [1, 2, 3]
// task4.unshift(4, 5, 6)
// console.log(task4);

// 5 Дан массив ['js', 'css', 'jq']. Выведите на экран первый элемент.
// let task5 = ['js', 'css', 'jq']
// task5.splice(1)
// console.log(task5);

// 6 Дан массив ['js', 'css', 'jq']. Выведите на экран последний элемент.
// let arr = ['js', 'css', 'jq']
// console.log(arr[2]);

// 7  Дан массив [1, 2, 3, 4, 5]. С помощью метода slice запишите в
// новый элементы [1, 2, 3].
// let a = [1, 2, 3, 4, 5]
// console.log(a.slice(0, 3 ));

// 8  Дан массив [1, 2, 3, 4, 5]. С помощью метода slice запишите в новый
// элементы [4, 5].
// let arr = [1, 2, 3, 4, 5]
// console.log(arr.slice(3, 5));

// 9  Дан массив [1, 2, 3, 4, 5]. С помощью метода splice преобразуйте
// массив в [1, 4, 5].
// let task9 = [1, 2, 3, 4, 5]
// task9.splice(1,2)
// console.log(task9);

// 10  Дан массив [1, 2, 3, 4, 5]. С помощью метода splice запишите в
// новый массив элементы [2, 3, 4].
// let arr = [1, 2, 3, 4, 5]
// arr.splice(0, 1)
// arr.splice(3,1)
// console.log(arr);

// 11  Дан массив [1, 2, 3, 4, 5]. С помощью метода splice сделайте из него
// массив [1, 2, 3, 'a', 'b', 'c', 4, 5].
// let a = [1, 2, 3,4, 5]
// a.splice(3, 0, "a", "b", "c")
// console.log(a);

// 12  Дан массив [1, 2, 3, 4, 5]. С помощью метода splice
// сделайте из него массив [1, 'a', 'b', 2, 3, 4, 'c', 5, 'e'].
// let b = [1, 2, 3, 4, 5]
// b.splice(1, 0, "a", "b")
// b.splice(6, 0, 'c')
// b.splice(8, 0, 'e')
// console.log(b);

// 1.Добавление и удаление элементов в конце массива:
// Создайте массив с несколькими элементами. Используйте push для добавления
// нового элемента в конец массива, а затем pop, чтобы удалить последний
// элемент. Выведите массив после каждой операции.
// let arr = [21, 78, 23, 276, 11]
// arr.push(56)
// arr.pop()
// console.log(arr)

// 2.Добавление и удаление элементов в начале массива:
// Создайте массив с несколькими элементами. Используйте unshift для
// добавления нового элемента в начало массива, а затем shift, чтобы удалить
// первый элемент. Выведите массив после каждой операции.
// let arr = [15, 34, 53, 98]
// arr.unshift(45,69)
// arr.shift()
// console.log(arr)

// 3.Разделение массива:
// Создайте массив с несколькими элементами. Используйте pop для удаления
// последнего элемента, а затем shift, чтобы удалить первый элемент, и
// выведите новый массив.
// let b = [91, 8, 23, 276, 11]
// b.pop()
// b.shift()
// console.log(b)

// 4.Создать массив
// let fruits = ['яблоко', 'апельсин', 'груша'];
// Добавить элемент в конец массива; // ['яблоко', 'апельсин', 'груша', 'банан']
// let fruits = ['яблоко', 'апельсин', 'груша']
// fruits.push('банан')
// console.log(fruits);

// 5.Удалить последний элемент массива
// ['яблоко', 'апельсин', 'груша']
// let fruits = ['яблоко', 'апельсин', 'груша']
// fruits.pop()
// console.log(fruits);

// 6.Объединить два массива с помощью push
// let arr1 = [1, 2, 3];
// let arr2 = [4, 5, 6];
// [1, 2, 3, 4, 5, 6];
// let arr1 = [1, 2, 3];
// let arr2 = [4, 5, 6];
// arr1.push(...arr2);
// console.log(arr1);

// 7.let numbers = [1, 2, 3, 4, 5];
// Удалить последний элемент и добавить новый элемент в начало массива
// [0, 1, 2, 3, 4]
// let numbers = [1, 2, 3, 4, 5]
// numbers.pop()
// numbers.unshift(0)
// console.log(numbers);

// 8.let queue = [];
// Добавить элементы в очередь
// ['третий', 'второй', 'первый']
// let queue = ['третий', 'второй', 'первый']
// queue.splice(0, 3, 'первый')
// queue.splice(1, 4,'второй')
// queue.splice(2, 5, 'третий')
// console.log(queue);

// 9.Удалить элемент из очереди (первый добавленный)
// ['третий', 'второй']
// let queue = ['третий', 'второй']
// queue.splice(0, 3, 'первый')
// queue.splice(1, 4,'второй')
// queue.splice(2, 5, 'третий')
// queue.shift()
// console.log(queue);

// 10.let numbers = [10, 20, 30, 40, 50];
// Удалить один элемент, начиная с индекса 2
// [10, 20, 40, 50]
// Удалить три элемента, начиная с индекса 1
// [10]
// let numbers = [10, 20, 30, 40, 50]
// numbers.splice(2, 1)
// numbers.splice(1, 3)
// console.log(numbers);

// 11.let colors = ["красный", "зеленый", "синий"];
// Вставить 'желтый' на место индекса 1, удалить 0 элементов
// ['красный', 'желтый', 'зеленый', 'синий']
// let colors = ["красный", "зеленый", "синий"]
// colors.splice(1, 0, 'желтый')
// console.log(colors);

// 12.let colors = ["красный", "зеленый", "синий"];
// Заменить 'зеленый' на 'фиолетовый'
// ['красный', 'желтый', 'фиолетовый', 'синий']
// let colors = ["красный", "зеленый", "синий"]
// colors.splice(1, 1, 'фиолетовый')
// colors.splice(1, 0, 'желтый')
// console.log(colors);

// 13.let cars = ["Мерседес", "БМВ", "Ауди"];
// Добавить два элемента ('Фольксваген' и 'Тойота') начиная с индекса 1
// ['Мерседес', 'Фольксваген', 'Тойота', 'БМВ', 'Ауди']
// let cars = ["Мерседес", "БМВ", "Ауди"]
// cars.splice(1,0, 'Фольксваген', 'Тойота' )
// console.log(cars);

// 14.let colors = ["красный", "желтый", "синий"];
// Заменить один элемент на другой, начиная с индекса 0
// ['фиолетовый', 'желтый', 'синий']
// let colors = ["красный", "желтый", "синий"]
// colors.splice(0,1, 'фиолетовый')
// console.log(colors);

// 15.let fruits = ["яблоко", "груша", "апельсин", "банан"];
// Удалить два элемента начиная с индекса 1 и сохранить их в новом массиве
// ['груша', 'апельсин']
// let fruits = ["яблоко", "груша", "апельсин", "банан"]
// fruits.pop()
// fruits.shift()
// console.log(fruits);



// map (element, index, array)
// filter()


// let arr = [23, 8, 89, 7, 67]
// console.log(arr.map((element, index, array) => {
//     return element > 10
// }));

// let arrName = ['Bill', 'Ben', 'Doni', 'Azamat']
// console.log(arrName.map((el) => {
//     if (el.length > 4) {
//         return el.toUpperCase()
//     }else{
//         return el
//     }
// }));


// let arr = [7, 4, 78, 34, 10, 2, 20]
// console.log(arr.filter((el, idx, arr) => {
//     return el % 2 !== 0
// }));


// Во всех задачах используйте только методы map, filter.
// 1. Вам дан массив: [315, 64, 75, 43, 65, 63].Найдите сумму каждого числа.
// let task1 = [315, 64, 75, 43, 65, 63]
// console.log(task1.map((el) => {
    // return el + el
// }));

// 2. Вам дан массив: ['Аскар', 'Баяман', 'Калмамат']. Создайте функцию,
//  изменяющую букву а в каждом имени на я и выведите в консоль.
// function task2(arr){
//     return arr.map((el) => {
//         return el.replaceAll('а', 'я')
//     })
// }console.log(task2(['Аскар', 'Баяман', 'Калмамат']));

// 3. Вам дан массив: ['Аскар', 'Баяман', 'Калмамат']. Создайте функцию,
//  которая выводит только те имена, где есть буква к и выведите в консоль.
// function task3(arr){
//     return arr.filter((el) => {
//         return el.includes('К')
//     })
// } console.log(task3( ['Аскар', 'Баяман', 'Калмамат']));

// 4. Вам дан массив: [4, 54, 49]. Сделайте из него массив, состоящий из квадратов этих чисел.
// let arr = [4, 54, 49]
// console.log(arr.map((el) => {
//   return el **2
// }));

// 5. Вам дан массив [3134, 4, -143, -245, -214]. Оставьте в нем только отрицательные числа.
// let arr = [3134, 4, -143, -245, -214]
// console.log(arr.filter((el) => {
//     return el < 0
// }));

// 6. Вам дан массив [3, 51, 30, 54, 60]. Оставьте в нем только четные числа.
// let arr = [3, 51, 30, 54, 60]
// console.log(arr.filter((el) => {
//     return el % 2 === 0
// }));

// 7. Вам дан массив ['Бегимай', 'Баяман', 'Калмамат']. Оставьте в нем только те
//  строки, длина которых больше
//  5-ти символов.
// let arr = ['Бегимай', 'Баяман', 'Калмамат']
// console.log(arr.filter((el) => {
//     return el.length > 5
// }));

// 8. Вам дан массив [-13, 96, -41, -28, 40]. Посчитайте количество отрицательных 
// чисел в этом массиве.
// let arr = [-13, 96, -41, -28, 40]
// console.log(arr.filter((el) => {
//     return el < 0
// }).length
// );

// 9. Вам дан массив [3, 51, -30, -54, 60]. Оставьте в нем только положительные числа.
//  Затем извлеките квадратный корень из этих чисел, если эти числа больше 30.
// let arr = [3, 51, -30, -54, 60]
// console.log(arr.filter((el) => {
//     return el > 0 
// }).map((el) => {
//     return Math.sqrt(el)
// }));

// 11. Вам дан массив [NaN, 0, 77, false, -17, '',undefined, 99, null]. Создайте функцию,
//  которая очищает массив от ложных (false) значений: false, null, undefined, 0, –0, NaN 
// и "" (пустая строка).
// function task11(arr){
//     return arr.filter((el) => {
//     return  el
//     })
// } console.log(task11([NaN, 0, 77, false, -17, '',undefined, 99, null]));
    
// 12. Вам дан массив ['Бегимай', 'Баяман', 'Калмамат']. Выведите длину каждой строки.
// let arr = ['Бегимай', 'Баяман', 'Калмамат']
// console.log(arr.map((el) => {
//     return el.length
// }));



// 4. Вам дан массив с числами [3,13,54,15,335, 39]. Найдите разность чисел, которые больше 10.
// let c = [3,13,54,15,335, 39]
// console.log(c.filter((el) => {
//     return el > 10
// }));

//  5. Вам дан массив с строками ['Аскар', 'Баяман', 'Калмамат']. Сложите все
//   строки и выведите длину результата.
// let str = ['Аскар', 'Баяман', 'Калмамат']
// console.log(str.reduce((acc, el) => {
//     return acc + el
// }).length);

//  Объединение элементов массива с определенным разделителем
//  Используйте метод reduce() для объединения элементов массива с определенным разделителем.
//  let items = ["apple", "banana", "cherry"];
//  let items = ["apple", "banana", "cherry"]
//  console.log(items.reduce((acc )));

//  Сортировка строк в лексикографическом порядке
//  Используйте метод sort(), чтобы отсортировать массив строк в лексикографическом порядке (по алфавиту).
//  let fruits = ["banana", "apple", "cherry", "date"]
//  let fruits = ["banana", "apple", "cherry", "date"]
//  console.log(fruits.reduce((sort) => {
//  return fruits.sort((a, b) => a.localeCompare(b));
// }));

//  Сортировка строк в обратном порядке
//  Используйте метод sort() и функцию сравнения для отсортировки массива строк в обратном порядке
//  let fruits = ["banana", "apple", "cherry", "date"];

//  Проверка наличия элемента больше определенного порога
//  Используйте метод some(), чтобы проверить, есть ли в массиве хотя бы один элемент больше 15
//  let numbers = [10, 5, 8, 22, 3];

// Проверка наличия строк, содержащих определенную букву
// Используйте метод some(), чтобы проверить, есть ли
//  в массиве строк хотя бы одна строка, содержащая определенную букву “a”
// let words = ["apple", "banana", "cherry", "date"];

// Поиск элемента в массиве
// Создайте массив чисел и используйте метод find(),
//  чтобы найти первый элемент, который больше  25 определенного порогового значения.
// let numbers = [10, 20, 30, 40, 50];

// Поиск элемента с использованием функции-коллбэка
// Создайте массив строк и используйте метод find(), чтобы найти
//  первую строку, которая начинается с "b" определенной буквы.
// let words = ["apple", "banana", "cherry", "date"];

// Поиск элемента по индексу
// Создайте массив чисел и используйте метод
// find() для нахождения элемента по его индексу 2
// let numbers = [10, 20, 30, 40, 50];





// 1. Найти первый элемент в массиве, который больше 10.
// let arr = [24, 1, 7,]
// console.log(arr.find((el) => {
//     return el > 10
// }))

// 2. Проверить, все ли элементы массива являются положительными числами.
// let arr = [12, -9, 25, 45]
// console.log(arr.every((el) => {
//     return el > 0
// }));

// 3. Проверить, есть ли в массиве хотя бы один элемент, равный 0.
// let arr = [0, 4, 78, 90]
// console.log(arr.some((el) => {
//     return el === 0
// }));

// 4. Найти первое четное число в массиве.
// let arr = [80, 57, 5, 34]
// console.log(arr.find((el) => {
//     return el % 2 === 0
// }));

// 5. Проверить, все ли строки в массиве содержат более 5 символов.
// let arr = ["rtyul", "asdfghh", "qwer", "zzzzxc"]
// console.log(arr.every((el) => {
//     return el.length = 5
// }));

// 6. Проверить, есть ли в массиве хотя бы одно отрицательное число.
// let arr = [219, 0, -4, 37]
// console.log(arr.find((el) => {
//     return el < 0
// }));

// 7. Найти первую строку в массиве, которая начинается с буквы "A".
// let arr = ['Asdddddddddf', 'qweerrr', 'xcvvvvvvb'] 
// console.log(arr.find((el) => {
//     return el.startsWith("A")
// }));

// 8. Проверить, все ли элементы массива являются четными числами.
// let arr = [56,78,90,46]
// console.log(arr.every((el) => {
//     return el % 2 === 0
// }));

// 10. Найти первый элемент массива, который делится на 3 без остатка.
// let arr = [4, 90, 77,35]
// console.log(arr.find((el) => {
//     return el % 3 === 0
// }));

// 11. Проверить, все ли элементы массива больше 0.
// let arr = [23,16,67]
// console.log(arr.every((el) => {
//     return el > 0
// }));

// 13. Найти первый элемент массива, который меньше 5.
// let arr = [54, 3, 31, 8]
// console.log(arr.find((el) =>{
//     return el < 5
// }));

// 15. Проверить, есть ли в массиве хотя бы один элемент, равный "apple".
// let arr = ['spoone', 'hi', 'apple']
// console.log(arr.find((el) => {
//     return el ==='apple'
// }));

// 16. Найти первый элемент массива, который содержит подстроку "JavaScript".
// let arr = ['world', 'class', 'JavaScript']
// console.log(arr.find((el) => {
//     return el ==='JavaScript'
// }));

// 17. Проверить, все ли элементы массива положительны.
// let arr = [1, 45, 21,77]
// console.log(arr.every((el) => {
//     return el > 0
// }));

// 18. Проверить, есть ли в массиве хотя бы одна строка, длина которой больше 10 символов.
// let arr = ['pencil', 'bacrond', 'cute', 'Kyrgyzstan']
// console.log(arr.find((el) => {
//     return el.length >= 10
// }));

// 19. Найти первый элемент массива, который является нечетным числом.
// let arr = [45, 67, 88]
// console.log(arr.find((el) => {
//     return el % 2 != 0
// }));

// 20. Проверить, все ли элементы массива являются отрицательными числами.
// let arr = [13, -1, 42, 9]
// console.log(arr.every((el) => {
//     return el < 0
// }));

// 21. Проверить, есть ли в массиве хотя бы один элемент, равный "banana".
// let arr = ['world', 'laptop', 'banana']
// console.log(arr.find((el) => {
//     return el === 'banana'
// }));

// 23. Проверить, все ли элементы массива являются кратными 4 числами.
// let arr = [100,28,16]
// console.log(arr.every((el) => {
//     return el % 4 === 0
// }));

// 25. Найти первый элемент массива, который больше 100.
// let arr = [98, 104, 204]
// console.log(arr.find((el) => {
//     return el > 100
// }));

// 27. Проверить, есть ли в массиве хотя бы одна строка, заканчивающаяся на "tion".
// let arr = ['education', 'asdfg', 'mnbvc']
// console.log(arr.find((el) => {
//     return el.endsWith('tion')
// }));

// Во всех задачах используйте только методы map, reduce.
// 1. Вам дан массив с числами [5,15,315,2,13,20,9]. Найдите сумму этих чисел.
// let arr = [5,15,315,2,13,20,9]
// console.log(arr.reduce((acc, el) => {
//     return acc + el
// }));

// 2. Вам дан массив с числами [5,12,314,2,13,20,9]. Найдите сумму всех четных чисел.
// let arr = [5,12,314,2,13,20,9]
// console.log(arr.filter((acc, el) =>{
//     return el % 2 === 0
// }).reduce((acc, el) =>{
//     return acc + el
// }));

// // 3. Вам дан массив с числами [5,15,315,2,13,20,9]. Найдите сумму чисел, которые больше 10.
// let arr =  [5,15,315,2,13,20,9]
// console.log(arr.filter((el) => {
//     return el > 10
// }).reduce((acc,el) =>{
//     return acc + el
// }));

// 4. Вам дан массив с числами [3,13,54,15,335, 39]. Найдите разность чисел, которые больше  10.
// let arr = [3,13,54,15,335, 39]
// console.log(arr.filter((el)=>{
//     return el > 10
// }).reduce((acc, el) =>{
//     return acc - el
// }));

// 5. Вам дан массив с строками ['Аскар', 'Баяман', 'Калмамат']. Сложите все строки и выведите длину результата.
// let arr = ['Аскар', 'Баяман', 'Калмамат']
// console.log(arr.reduce((acc, el) =>{
//     return acc + el
// }).length
// );

// 6. Вам дан массив с строками ['Аскар', 'Баяман', 'Калмамат']. Выведите все строки в верхнем регистре, используя map.
// let arr = ['Аскар', 'Баяман', 'Калмамат'].
// console.log(arr.map((el, idx) => {
// if (idx % 2 !== 0)
// }));

// 7. Вам дан массив с строками ['Аскар', 'Баяман', 'Калмамат']. Выведите все вторые строки в верхнем регистре.
// let arr = ['Аскар', 'Баяман', 'Калмамат']
//     console.log(arr.map((el) => {
//         return arr[1].toUpperCase()
//  }));
    
// 14. Вам дан массив с числами [5, -54, 13, -7, 45, -15, -34]. Верните сумму всех отрицательных чисел, которые больше 10.
// let arr =  [5, -54, 13, -7, 45, -15, -34]
// console.log(arr.filter((acc, el) =>{
//     return el < 0
// })
// .reduce((acc, el) =>{
//     return acc + el
// })
// );

// 15. Вам дан массив с числами [1, 65, 13 , 30, 100] - все числа - доллары. Вам нужно
//  обменять эти доллары по курсу сома и вывести все числа в сомах.
// let arr = [1, 65, 13 , 30, 100]
// console.log(arr.map((el) =>{
//    return el * 87
// }));

// 17. Вам дан массив с строками ['Оскар', 'Баяман', 'Калмамат']. Добавьте к каждой строке нумерацию.
// let arr = ['Оскар', 'Баяман', 'Калмамат']
// console.log(arr.map((el, index) => `${index + 1}.${el}`));


// function task(){} --- decleration
// const task = () => {} --- expration

// 2. Найти минимальное значение в массиве
// Дан массив чисел. Напишите функцию, которая находит минимальное значение в массиве, используя только reduce.
// const arr = [5, 3, 8, 1, 9, 6];
// const arr = [5, 3, 8, 1, 9, 6];
// console.log(arr.reduce((acc, el) => {
//     return acc < el ? acc : el
// }));

// 3. Найти максимальное значение в массиве
// Дан массив чисел. Напишите функцию, которая находит максимальное значение в массиве, используя только reduce.
// const arr = [5, 3, 8, 1, 9, 6];
// const arr = [5, 3, 8, 1, 9, 6];
// function task(nums){
//     return nums.reduce((acc,el) => (acc > el ? acc : el))
// } console.log(task(arr));

// 4. Умножение всех чисел в массиве
// Дан массив чисел. Напишите функцию, которая возвращает произведение всех чисел, используя только reduce.
// const arr = [1, 2, 3, 4];
// function task4(num){
//     return num.reduce((acc, el) => acc * el)
// } console.log(task4(arr));

// 5. Подсчет количества положительных чисел в массиве
// Дан массив чисел. Напишите функцию, которая подсчитывает количество положительных чисел в массиве, 
// используя только reduce.
// const arr = [1, -2, 3, -4, 5];
// function task5(num){
//     return num.reduce((acc, el) => (el > 0 ? acc + 1 : acc), 0)
// } console.log(task5(arr));

// 6. Подсчет количества отрицательных чисел в массиве
// Дан массив чисел. Напишите функцию, которая подсчитывает количество отрицательных чисел в массиве,
//  используя только reduce.
// const arr = [1, -2, 3, -4, 5];
// function task6(num){
//     return num.reduce((acc, el) =>(el < 0 ? acc + 1 : acc), 0)
// }console.log(task6(arr));

// 7. Подсчет общего количества символов в массиве строк
// Дан массив строк. Напишите функцию, которая возвращает общее количество символов во всех строках,
//  используя только reduce.
// const words = ['apple', 'banana', 'cherry'];
// function task7(str) {
//     return str.reduce((acc,el) => acc + el)
// } console.log(task7(words).length);

// 8. Преобразование массива чисел в массив их квадратов
// Дан массив чисел. Напишите функцию, которая возвращает массив чисел, являющихся квадратами чисел 
// из исходного массива, используя только reduce.
// const arr = [1, 2, 3, 4];
// function task8(num){
//     return num.reduce((acc, el) => {
//         acc.push(el * el)
//         return acc 
//     }, [])
// } console.log(task8(arr));

// 9. Преобразование массива строк в массив их длин
// Дан массив строк. Напишите функцию, которая возвращает массив длин этих строк, используя только reduce.
// const words = ['apple', 'banana', 'cherry']
// console.log(task9(words));
//  task9 = (str) => {
//     return str.reduce((el) =>{acc.push(str.length)})
// }

// 10. Получить все уникальные элементы из массива
// Дан массив чисел. Напишите функцию, которая возвращает массив уникальных элементов, используя только reduce.
// const arr = [1, 2, 2, 3, 4, 4, 5];

//?
// Дан массив строк с названиями городов. Напиши функцию, которая принимает этот массив и возвращает 
// новый массив, содержащий только те города, которые начинаются с буквы "А" (регистр не имеет значения),
//  но с названием в верхнем регистре.
// let cities = ["Алматы", "Бишкек", "Астана", "Москва", "астрахань", "Ташкент"];
// Ожидаемый результат: ["АЛМАТЫ", "АСТАНА", "АСТРАХАНЬ"]
// let cities = ["Алматы", "Бишкек", "Астана", "Москва", "астрахань", "Ташкент"]
// console.log(cities.filter((el, idx) => el[0].toUpperCase().startsWith('А')).map(el => el.toUpperCase()));


// split()
// let str = "welcome to motion web"
// console.log(atr.split(" "));
// let str = "motionGtoGitGacademy"
// console.log(str.split("G"));


// join()
// let arrName = ["Asan", "Vector", "Bill", "Bob", "Doni"]
// console.log(arrName.join(" ;"));


// 1.Преобразование чисел в строку
// Создайте массив чисел и используйте метод join() для преобразования их в строку, разделенную запятой.
// let numbers = [1, 2, 3, 4, 5];
// console.log(numbers.join(","));

// 2. Объединение пути к файлу
// Создайте массив строк, представляющих части пути к файлу, и используйте метод join() для объединения их в один путь.
// let pathParts = ["folder", "subfolder", "file.txt"];
// console.log(pathParts.join("/"));

// 3. Разделение строки по пробелам
// Разделите строку на массив слов, используя пробел в качестве разделителя.
// let sentence = "Это пример разделения строки на слова";
// console.log(sentence.split(" "));

// 4. Разделение строки по запятой
// Разделите строку, содержащую перечень элементов, разделенных запятыми, на массив элементов.
// let items = "apple, banana, cherry, date";
// console.log(items.split(", "));

// Во всех задачах используйте только методы split()
// Задача 1: Разделение строки на слова
// Напишите функцию splitWords(str), которая принимает строку str и возвращает массив 
// слов. Считайте, что слова разделены пробелами.
// // Ожидаемый результат: ["JavaScript", "is", "awesome"]
// let str = "JavaScript is awesome"
// function task (any){
//     return any.split(" ")
// } console.log(task(str));

// Задача 2: Разделение строки на символы
// Напишите функцию splitCharacters(str), которая принимает строку str и возвращает массив всех символов строки.
// // Ожидаемый результат: ["h", "e", "l", "l", "o"]
// let arr = "hello"
// console.log(arr.split(""));

// Задача 3: Сумма чисел из строки
// Напишите функцию sumNumbers(str), которая принимает строку из чисел, разделенных запятыми, и возвращает их сумму.
// sumNumbers("5,10,15,20");
// // Ожидаемый результат: 50
// function sumNumbers(str) {
//     return str.split(",").reduce((acc, el) =>{
//         return acc + Number(el)
//     }, 0)
// }console.log(sumNumbers("5,10,15,20"));

// Задача 4: Обратный порядок слов
// Напишите функцию reverseWords(str), которая принимает строку str и возвращает новую строку, где слова идут в обратном порядке.
// reverseWords("Hello world from JavaScript");
// // Ожидаемый результат: "JavaScript from world Hello"
// function reverseWords(str){
//     return str.split(" ").reverse()
// } console.log(reverseWords("Hello world from JavaScript"));

// Задача 5: Получение расширения файла
// Напишите функцию getFileExtension(filename), которая принимает строку с именем файла и возвращает его расширение. Считайте, что файл всегда имеет расширение.
// getFileExtension("document.pdf");
// // Ожидаемый результат: "pdf"
// function getFileExtension(filename){
//     return filename.split(".").pop()
// } console.log(getFileExtension("document.pdf"));

// Задача 6: Первые буквы слов
// Напишите функцию getFirstLetters(str), которая принимает строку, состоящую из нескольких слов, и возвращает строку, состоящую из первых букв каждого слова.
// Пример:
//getFirstLetters("Hello  amazing world");
// // Ожидаемый результат: "Haw"
// function getFirstLetters(str){
//     return str.split(" ").map((el, idx) =>{
//         return el[0]
//     }).join("")
// } console.log(getFirstLetters("Hello amazing world"));

// Задача 7: Подсчет слов в строке
// Напишите функцию countWords(str), которая принимает строку и возвращает количество слов в ней. Считайте, что слова разделены пробелами и других разделителей нет.
// Пример:
// countWords("JavaScript is fun to learn");
// // Ожидаемый результат: 5
// function countWords(str){
//     return str.split(" ").length
// } console.log(countWords("JavaScript is fun to learn"));

// ["apple", "banana", "cherry", "watermelon"] Найти самую длинную строку в массиве reduce()

// 1. Преобразование строки в "змейку"
// Output: "convert_this_sentence_to_snake_case"

// 2. Объединить элементы массива в одну строку.
// Output: "JavaScript is fun" reduce()

// 3. Выбрать только числа больше 10.
// Output: [12, 20, 15] reduce()

// Вам дана функция checkTask, принимающая массив arr с числами.
// Используя метод reduce(), вычтите числа в массиве начиная с начала
// и выведите в консоль результат.
// Например:
// checkTask( [175, 50, 25])
// Вывод:
// 100
// т.к 175-50-25=100

// object - {}

// Написать функцию, которая проверяет, является ли строка палиндромом.
// “level”
// “hello”
// function poli(str) {
//     let s = prompt('')
//     return s === s.split('').reverse().join('') ? 'палиндромом' : 'не палиндромом.'
// }
// console.log(poli(''));

// let str = "level"
// console.log(str === str.split("").reverse().join(""));